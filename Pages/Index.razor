@page "/"
@using Microsoft.AspNetCore.SignalR.Client;
@inject NavigationManager NavManager;
@implements IAsyncDisposable


<div class="container">
    <h2 class="text-info">Web Server and Desktop Client</h2>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="message">
                Message
            </label>
            <input class="form-control" @bind="messageInput" placeholder="First turn on the connection in client" />
        </div>
    </div>
    <button class="btn btn-success" @onclick="Send" disabled="@(IsConnected == false)">Send</button>

    <hr />

    <ul>
        @foreach(string message in messages)
        {
            <li>@message</li>
        }
    </ul>
</div>

@code {
    private HubConnection? hubConnection;
    private List<string> messages = new List<string>();
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder().WithUrl(NavManager.ToAbsoluteUri("/apphub"))
                                      .WithAutomaticReconnect().Build();

        hubConnection.On<string, string>("ReceiveMessage", (sender, message) =>
        {
            var formattedMessage = $"{sender}:  {message}";
            messages.Add(formattedMessage);

            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    private async Task Send()
    {
        if(hubConnection !=null)
        {
            await hubConnection.SendAsync("BroadCastMessage", "Server", messageInput);
        }
    }

    public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if(hubConnection !=null)
        {
            await hubConnection.DisposeAsync();
        }

    }
}